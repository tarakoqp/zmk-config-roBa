#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        lefr {
            bindings = <&kp LEFT_ALT>;
            key-positions = <35 36>;
        };

        left {
            bindings = <&kp LEFT_ARROW>;
            key-positions = <18 17>;
        };

        up {
            bindings = <&kp UP_ARROW>;
            key-positions = <6 7>;
        };

        right {
            bindings = <&kp RIGHT_ARROW>;
            key-positions = <20 19>;
        };

        down {
            bindings = <&kp DOWN_ARROW>;
            key-positions = <30 31>;
        };

        alr {
            bindings = <&kp LA(P)>;
            key-positions = <9 8>;
        };

        opening {
            bindings = <&pc_opening>;
            key-positions = <5 6>;
        };

        remote_combo {
            bindings = <&remote>;
            key-positions = <16 17>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        remote: pass_remote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp E &kp R &kp A &kp L &kp A &kp B &kp N9 &kp N2>;
            label = "PASS_REMOTE";
        };

        pc_opening: pc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K &kp A &kp Z &kp U &kp K &kp I &kp N1 &kp N1 &kp N0 &kp N8>;
            label = "PC";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                    &kp T                                                   &kp Y        &kp U  &lt 5 I    &kp O    &kp P
&kp A             &kp S         &kp D         &kp F                    &kp G        &kp LA(TAB)               &kp MINUS        &kp H        &kp J  &lt 5 K    &kp L    &kp SEMI
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                    &kp B        &kp LEFT_BRACKET          &kp EQUAL        &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &mt LEFT_SHIFT CAPSLOCK  &lt 7 SPACE  &lt_to_layer_0 3 TAB      &lt 6 BACKSPACE  &lt 1 ENTER                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp ESCAPE  &kp LC(LS(TAB))     &kp UP_ARROW        &kp LC(TAB)          &trans                        &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&kp HOME    &kp LEFT_ARROW      &kp DOWN_ARROW      &kp RIGHT_ARROW      &kp END  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans      &kp LG(LEFT_ARROW)  &kp LG(UP_ARROW)    &kp LG(RIGHT_ARROW)  &trans   &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans      &trans              &kp LG(DOWN_ARROW)  &trans               &trans   &trans      &trans   &trans                          &kp F12
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0                                               &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH                   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ASTERISK  &kp LC(LA(NUMBER_0))      &kp LEFT_BRACKET   &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD    &kp EQUAL                 &kp RIGHT_BRACKET  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&trans                      &trans        &trans        &trans        &trans        &trans                    &trans             &trans                                                                     &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans    &trans                          &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans    &trans  &trans        &trans    &trans  &mkp MB1  &trans  &mkp MB2  &mkp MB3
&trans  &trans  &trans  &trans    &trans  &mkp MB4      &mkp MB5  &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &mkp MB1  &trans  &mkp MB4      &trans    &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0                              &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4
&trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans        &trans      &trans          &trans        &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans        &trans      &kp APOSTROPHE  &trans        &trans           &trans             &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans        &trans      &trans          &trans                                                          &bt BT_CLR_ALL
            >;
        };

        num2 {
            bindings = <
&kp F1        &kp F2        &kp F3            &kp F4          &kp F5                                      &kp F6                 &kp F7           &kp F8             &kp F9        &kp F10
&kp N1        &kp NUMBER_2  &kp NUMBER_3      &kp NUMBER_4    &kp N5                &trans       &trans   &kp NUMBER_6           &kp NUMBER_7     &kp NUMBER_8       &kp NUMBER_9  &kp NUMBER_0
&kp NUMBER_0  &trans        &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp F11      &kp F12  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &trans        &trans
&kp SLASH     &kp TILDE     &trans            &trans          &trans                &trans       &trans   &trans                                                                   &kp BACKSLASH
            >;

            label = "number";
        };
    };
};
